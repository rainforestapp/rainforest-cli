version: 2.1
orbs:
  win: circleci/windows@2.2.0

defaults: &defaults
  docker:
    - image: cimg/go:1.17.1-node
windows: &windows
  executor:
    name: win/default
    shell: powershell.exe
mac: &mac
  macos:
    xcode: 11.3.0

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: go test -v -race ./...

  integration_mac_pass:
    <<: *mac
    steps:
      - checkout
      - run:
          name: Install go
          command: |
            curl -L https://golang.org/dl/go1.17.1.darwin-amd64.tar.gz > go.tar.gz
            tar -xzf go.tar.gz
            rm go.tar.gz
            ./go/bin/go version
      - run:
          name: Build
          command: |
            ./go/bin/go build
      - run:
          name: Start a run that will pass
          command: |
            ./rainforest-cli -v --skip-update
            ./rainforest-cli --skip-update run --run-group 9502

  integration_mac_pass_junit:
    <<: *mac
    steps:
      - checkout
      - run:
          name: Install go
          command: |
            curl -L https://golang.org/dl/go1.17.1.darwin-amd64.tar.gz > go.tar.gz
            tar -xzf go.tar.gz
            rm go.tar.gz
            ./go/bin/go version
      - run:
          name: Build
          command: |
            ./go/bin/go build
      - run:
          name: Start a run that will pass, with junit
          command: |
            ./rainforest-cli -v --skip-update
            ./rainforest-cli --skip-update run --run-group 9502 --junit-file junit-pass.xml

  integration_mac_fail:
    <<: *mac
    steps:
      - checkout
      - run:
          name: Install go
          command: |
            curl -L https://golang.org/dl/go1.17.1.darwin-amd64.tar.gz > go.tar.gz
            tar -xzf go.tar.gz
            rm go.tar.gz
            ./go/bin/go version
      - run:
          name: Build
          command: |
            ./go/bin/go build
      - run:
          name: Start a run that will fail
          command: |
            set +eo pipefail
            ./rainforest-cli -v --skip-update
            ./rainforest-cli --skip-update run --run-group 9503
            if [[ $? != 0 ]]; then
              echo "TESTING ::: Got the expected non-zero exit code. âœ…"
              echo 0
            else
              echo "TESTING ::: Got UNEXPECTED zero exit code. ðŸš¨"
              echo 1
            fi

  integration_mac_fail_junit:
    <<: *mac
    steps:
      - checkout
      - run:
          name: Install go
          command: |
            curl -L https://golang.org/dl/go1.17.1.darwin-amd64.tar.gz > go.tar.gz
            tar -xzf go.tar.gz
            rm go.tar.gz
            ./go/bin/go version
      - run:
          name: Build
          command: |
            ./go/bin/go build
      - run:
          name: Start a run that will fail, with junit
          command: |
            set +eo pipefail
            ./rainforest-cli -v --skip-update
            ./rainforest-cli --skip-update run --run-group 9503 --junit-file junit-pass.xml
            if [[ $? != 0 ]]; then
              echo "TESTING ::: Got the expected non-zero exit code. âœ…"
              echo 0
            else
              echo "TESTING ::: Got UNEXPECTED zero exit code. ðŸš¨"
              echo 1
            fi

  integration_linux_pass:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Build
          command: |
            go build
      - run:
          name: Start a run that will pass
          command: |
            ./rainforest-cli -v --skip-update
            ./rainforest-cli --skip-update run --run-group 9502

  integration_linux_pass_junit:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Build
          command: |
            go build
      - run:
          name: Start a run that will pass, with junit
          command: |
            ./rainforest-cli -v --skip-update
            ./rainforest-cli --skip-update run --run-group 9502 --junit-file junit-pass.xml

  integration_linux_fail:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Build
          command: |
            go build
      - run:
          name: Start a run that will fail
          command: |
            set +eo pipefail
            ./rainforest-cli -v --skip-update
            ./rainforest-cli --skip-update run --run-group 9503
            if [[ $? != 0 ]]; then
              echo "TESTING ::: Got the expected non-zero exit code. âœ…"
              echo 0
            else
              echo "TESTING ::: Got UNEXPECTED zero exit code. ðŸš¨"
              echo 1
            fi

  integration_linux_fail_junit:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Build
          command: |
            go build
      - run:
          name: Start a run that will fail, with junit
          command: |
            set +eo pipefail
            ./rainforest-cli -v --skip-update
            ./rainforest-cli --skip-update run --run-group 9503 --junit-file junit-fail.xml
            if [[ $? != 0 ]]; then
              echo "TESTING ::: Got the expected non-zero exit code. âœ…"
              exit 0
            else
              echo "TESTING ::: Got UNEXPECTED zero exit code. ðŸš¨"
              exit 1
            fi

  integration_windows_pass:
    <<: *windows
    steps:
      - checkout
      - run:
          name: "Build, and run rainforest"
          shell: powershell.exe
          command: |
            go build
            .\rainforest-cli.exe -v --skip-update
            .\rainforest-cli.exe --skip-update run --run-group 9502

  integration_windows_pass_junit:
    <<: *windows
    steps:
      - checkout
      - run:
          name: "Build, and run rainforest with junit output"
          shell: powershell.exe
          command: |
            go build
            .\rainforest-cli.exe -v --skip-update
            .\rainforest-cli.exe --skip-update run --run-group 9502 --junit-file junit-fail.xml

  integration_windows_fail:
    <<: *windows
    steps:
      - checkout
      - run:
          name: "Build, and run rainforest"
          shell: powershell.exe
          command: |
            go build
            .\rainforest-cli.exe -v --skip-update
            .\rainforest-cli.exe --skip-update run --run-group 9503
            if ($LastExitCode -gt 0) {
              echo "TESTING ::: Got the expected non-zero exit code."
              # exit 0
            } else {
              echo "TESTING ::: Got UNEXPECTED zero exit code."
              # exit 1
            }

  integration_windows_fail_junit:
    <<: *windows
    steps:
      - checkout
      - run:
          name: "Build, and run rainforest with junit output"
          shell: powershell.exe
          command: |
            go build
            .\rainforest-cli.exe -v --skip-update
            .\rainforest-cli.exe --skip-update run --run-group 9503 --junit-file junit-fail.xml
            if ($LastExitCode -gt 0) {
              echo "TESTING ::: Got the expected non-zero exit code."
              # exit 0
            } else {
              echo "TESTING ::: Got UNEXPECTED zero exit code."
              # exit 1
            }


  release:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Release via GoReleaser
          command: |
            export GITHUB_TOKEN=$GITHUB_ACCESS_TOKEN
            curl -sL https://git.io/goreleaser | bash
      - run:
          name: Show checksums
          command: cat dist/checksums.txt
      - store_artifacts:
          path: dist/checksums.txt

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - integration_mac_pass
      - integration_mac_pass_junit
      - integration_mac_fail
      - integration_mac_fail_junit
      - integration_linux_pass
      - integration_linux_pass_junit
      - integration_linux_fail
      - integration_linux_fail_junit
      - integration_windows_pass
      - integration_windows_pass_junit
      - integration_windows_fail
      - integration_windows_fail_junit
      - release:
          requires:
            - test
            - integration_mac_pass
            - integration_mac_pass_junit
            - integration_mac_fail
            - integration_mac_fail_junit
            - integration_linux_pass
            - integration_linux_pass_junit
            - integration_linux_fail
            - integration_linux_fail_junit
            - integration_windows_pass
            - integration_windows_pass_junit
            - integration_windows_fail
            - integration_windows_fail_junit
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
