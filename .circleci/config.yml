version: 2.1
orbs:
  win: circleci/windows@2.2.0

defaults: &defaults
  docker:
    - image: cimg/go:1.17.1-node
windows: &windows
  executor:
    name: win/default
    shell: powershell.exe
mac: &mac
  macos:
    xcode: 11.3.0

commands:
  install_go_darwin:
    description: "Install Go on Darwin"
    steps:
      - run:
          name: Install go
          command: |
            curl -L https://golang.org/dl/go1.17.1.darwin-amd64.tar.gz | tar zxf -
            echo "export PATH=$PATH:`pwd`/go/bin" >> $BASH_ENV
            source $BASH_ENV
            go version
  go_build:
    description: "go build, and output cli version"
    parameters:
      windows:
        description: Whether this is running on Windows
        type: boolean
        default: false
    steps:
      - run:
          name: Build
          command: go build -o build/rainforest<<# parameters.windows >>.exe<</ parameters.windows >>
      - when:
          condition: << parameters.windows >>
          steps:
            - run:
                name: Move executable
                command: |
                  Move-Item rainforest rainforest-dir
                  Move-Item build\./rainforest.exe .
            - run:
                name: Show CLI version
                command: ./rainforest.exe -v --skip-update
      - unless:
          condition: << parameters.windows >>
          steps:
            - run:
                name: Move executable
                command: |
                  mv rainforest rainforest-dir
                  mv build/rainforest .
            - run:
                name: Show CLI version
                command: ./rainforest -v --skip-update

jobs:
  validate_goreleaser_config:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install GoReleaser
          command: go install github.com/goreleaser/goreleaser@latest
      - run:
          name: Check GoReleaser Config
          command: goreleaser check
  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Get Junit Reporter
          command: go install github.com/jstemmer/go-junit-report@latest
      - run:
          name: Run Unit Tests
          command: go test -v -race ./... 2>&1 | go-junit-report > report.xml
      - store_test_results:
          path: report.xml

  integration_mac_pass:
    <<: *mac
    steps:
      - checkout
      - install_go_darwin
      - go_build
      - run:
          name: Start a run that will pass
          command: |
            ./rainforest --skip-update run --run-group 9502

  integration_mac_pass_junit:
    <<: *mac
    steps:
      - checkout
      - install_go_darwin
      - go_build
      - run:
          name: Start a run that will pass, with junit
          command: |
            ./rainforest --skip-update run --run-group 9502 --junit-file junit-pass.xml
      - store_test_results:
          path: junit-pass.xml

  integration_mac_fail:
    <<: *mac
    steps:
      - checkout
      - install_go_darwin
      - go_build
      - run:
          name: Start a run that will fail
          command: |
            set +e
            ./rainforest --skip-update run --run-group 9503
            if [[ $? != 0 ]]; then
              echo "TESTING ::: Got the expected non-zero exit code. âœ…"
              echo 0
            else
              echo "TESTING ::: Got UNEXPECTED zero exit code. ðŸš¨"
              echo 1
            fi

  integration_mac_fail_junit:
    <<: *mac
    steps:
      - checkout
      - install_go_darwin
      - go_build
      - run:
          name: Start a run that will fail, with junit
          command: |
            set +e
            ./rainforest --skip-update run --run-group 9503 --junit-file junit-fail.xml
            if [[ $? != 0 ]]; then
              echo "TESTING ::: Got the expected non-zero exit code. âœ…"
              echo 0
            else
              echo "TESTING ::: Got UNEXPECTED zero exit code. ðŸš¨"
              echo 1
            fi
      - store_test_results:
          path: junit-fail.xml

  integration_linux_pass:
    <<: *defaults
    steps:
      - checkout
      - go_build
      - run:
          name: Start a run that will pass
          command: |
            ./rainforest --skip-update run --run-group 9502

  integration_linux_pass_junit:
    <<: *defaults
    steps:
      - checkout
      - go_build
      - run:
          name: Start a run that will pass, with junit
          command: |
            ./rainforest --skip-update run --run-group 9502 --junit-file junit-pass.xml
      - store_test_results:
          path: junit-pass.xml

  integration_linux_fail:
    <<: *defaults
    steps:
      - checkout
      - go_build
      - run:
          name: Start a run that will fail
          command: |
            set +e
            ./rainforest --skip-update run --run-group 9503
            if [[ $? != 0 ]]; then
              echo "TESTING ::: Got the expected non-zero exit code. âœ…"
              echo 0
            else
              echo "TESTING ::: Got UNEXPECTED zero exit code. ðŸš¨"
              echo 1
            fi

  integration_linux_fail_junit:
    <<: *defaults
    steps:
      - checkout
      - go_build
      - run:
          name: Start a run that will fail, with junit
          command: |
            set +e
            ./rainforest --skip-update run --run-group 9503 --junit-file junit-fail.xml
            if [[ $? != 0 ]]; then
              echo "TESTING ::: Got the expected non-zero exit code. âœ…"
              exit 0
            else
              echo "TESTING ::: Got UNEXPECTED zero exit code. ðŸš¨"
              exit 1
            fi
      - store_test_results:
          path: junit-fail.xml

  integration_windows_pass:
    <<: *windows
    steps:
      - checkout
      - go_build:
          windows: true
      - run:
          name: Run rainforest
          command: |
            ./rainforest.exe --skip-update run --run-group 9502

  integration_windows_pass_junit:
    <<: *windows
    steps:
      - checkout
      - go_build:
          windows: true
      - run:
          name: Run rainforest with junit output
          command: |
            ./rainforest.exe --skip-update run --run-group 9502 --junit-file junit-pass.xml
      - store_test_results:
          path: junit-pass.xml

  integration_windows_fail:
    <<: *windows
    steps:
      - checkout
      - go_build:
          windows: true
      - run:
          name: Run rainforest
          command: |
            ./rainforest.exe --skip-update run --run-group 9503
            if ($LastExitCode -gt 0) {
              echo "TESTING ::: Got the expected non-zero exit code."
              exit 0
            } else {
              echo "TESTING ::: Got UNEXPECTED zero exit code."
              exit 1
            }

  integration_windows_fail_junit:
    <<: *windows
    steps:
      - checkout
      - go_build:
          windows: true
      - run:
          name: Run rainforest with junit output
          command: |
            ./rainforest.exe --skip-update run --run-group 9503 --junit-file junit-fail.xml
            if ($LastExitCode -gt 0) {
              echo "TESTING ::: Got the expected non-zero exit code."
              exit 0
            } else {
              echo "TESTING ::: Got UNEXPECTED zero exit code."
              exit 1
            }
      - store_test_results:
          path: junit-fail.xml

  release:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Release via GoReleaser
          command: |
            export GITHUB_TOKEN=$GITHUB_ACCESS_TOKEN
            curl -sL https://git.io/goreleaser | bash
      - run:
          name: Show checksums
          command: cat dist/checksums.txt
      - store_artifacts:
          path: dist/checksums.txt

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - validate_goreleaser_config
      - integration_mac_pass:
          requires:
            - test
            - validate_goreleaser_config
      - integration_mac_pass_junit:
          requires:
            - test
      - integration_mac_fail:
          requires:
            - test
            - validate_goreleaser_config
      - integration_mac_fail_junit:
          requires:
            - test
            - validate_goreleaser_config
      - integration_linux_pass:
          requires:
            - test
            - validate_goreleaser_config
      - integration_linux_pass_junit:
          requires:
            - test
            - validate_goreleaser_config
      - integration_linux_fail:
          requires:
            - test
            - validate_goreleaser_config
      - integration_linux_fail_junit:
          requires:
            - test
            - validate_goreleaser_config
      - integration_windows_pass:
          requires:
            - test
            - validate_goreleaser_config
      - integration_windows_pass_junit:
          requires:
            - test
            - validate_goreleaser_config
      - integration_windows_fail:
          requires:
            - test
            - validate_goreleaser_config
      - integration_windows_fail_junit:
          requires:
            - test
            - validate_goreleaser_config
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
